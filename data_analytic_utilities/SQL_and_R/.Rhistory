mainPanel(plotOutput('histoplot'),br(),tableOutput("table"))
)
shinyApp(ui = ui2, server = server)
ui2<-fluidPage(
titlePanel("Factors vs Labels"),
h2('Factors'), #header 1
br(), #break
h3("Store"),
strong("variables"), # bold line
sliderInput("Value_input", "values", min = 0, max = 1000,
value = c(1, 10)),
radioButtons("typeInput", "Product type",
choices = c("BEER", "REFRESHMENT", "SPIRITS", "WINE"),
selected = "WINE"),
selectInput("countryInput", "Country",
choices = c("CANADA", "FRANCE", "ITALY")),
numericInput("obs","Observations",value=0,min=1,max=1000),
mainPanel(plotOutput('histoplot'),br(),tableOutput("table"))
)
shinyApp(ui = ui2, server = server)
ui2<-fluidPage(
titlePanel("Factors vs Labels"),
h2('Factors'), #header 1
br(), #break
h3("Store"),
strong("variables"), # bold line
sliderInput("Value_input", "values", min = 0, max = 1000,
value = 5),
radioButtons("typeInput", "Product type",
choices = c("BEER", "REFRESHMENT", "SPIRITS", "WINE"),
selected = "WINE"),
selectInput("countryInput", "Country",
choices = c("CANADA", "FRANCE", "ITALY")),
numericInput("obs","Observations",value=0,min=1,max=1000),
mainPanel(plotOutput('histoplot'),br(),tableOutput("table"))
)
server <- function(input, output) {}
shinyApp(ui = ui2, server = server)
ui2<-fluidPage(
titlePanel("Factors vs Labels"),
h2('Factors'), #header 1
br(), #break
h3("Store"),
strong("variables"), # bold line
sliderInput("Value_input", "values", min = 0, max = 1000,
value = 5),
radioButtons("typeInput", "type of category",
choices = c("cat_1", "cat_2", "cat_3"),
selected = "cat_3"),
selectInput("countryInput", "Country",
choices = c("CANADA", "FRANCE", "ITALY")),
numericInput("obs","Observations",value=0,min=1,max=1000),
mainPanel(plotOutput('histoplot'),br(),tableOutput("table"))
)
shinyApp(ui = ui2, server = server)
ui2<-fluidPage(
titlePanel("Factors vs Labels"),
h2('Factors'), #header 1
br(), #break
h3("Store"),
strong("variables"), # bold line
br(),
sliderInput("Value_input", "values", min = 0, max = 1000,
value = 5),
radioButtons("typeInput", "type of category",
choices = c("cat_1", "cat_2", "cat_3"),
selected = "cat_3"),
selectInput("countryInput", "traits",
choices = c("trait_1", "trait_2", "trait_3")),
numericInput("obs","Observations",value=0,min=1,max=1000),
mainPanel(plotOutput('histoplot'),br(),tableOutput("table"))
)
ui2<-fluidPage(
titlePanel("Factors vs Labels"),
h2('Factors'), #header 1
br(), #break
h3("Store"),
strong("variables"), # bold line
br(),
sliderInput("Value_input", "values", min = 0, max = 1000,
value = 5),
radioButtons("typeInput", "type of category",
choices = c("cat_1", "cat_2", "cat_3"),
selected = "cat_3"),
selectInput("countryInput", "traits",
choices = c("trait_1", "trait_2", "trait_3")),
numericInput("obs","Observations",value=0,min=1,max=1000),
mainPanel(plotOutput('histoplot'),br(),tableOutput("table"))
)
shinyApp(ui = ui2, server = server)
ui2<-fluidPage(
titlePanel("Factors vs Traits"),
br(),
h2('Factors'), #header 1
br(), #break
sliderInput("Value_input", "values", min = 0, max = 1000),
radioButtons("typeInput", "type of category",
choices = c("cat_1", "cat_2", "cat_3"),
selected = "cat_3"),
selectInput("countryInput", "traits",
choices = c("trait_1", "trait_2", "trait_3")),
numericInput("obs","Observations",value=0,min=1,max=1000),
mainPanel(plotOutput('histoplot'),br(),tableOutput("table"))
)
ui2<-fluidPage(
titlePanel("Factors vs Traits"),
br(),
h2('Factors'), #header 1
br(), #break
sliderInput("Value_input", "values", min = 0, max = 1000,value = 1),
radioButtons("typeInput", "type of category",
choices = c("cat_1", "cat_2", "cat_3"),
selected = "cat_3"),
selectInput("countryInput", "traits",
choices = c("trait_1", "trait_2", "trait_3")),
numericInput("obs","Observations",value=0,min=1,max=1000),
mainPanel(plotOutput('histoplot'),br(),tableOutput("table"))
)
shinyApp(ui = ui2, server = server)
ui2<-fluidPage(
titlePanel("Factors vs Traits"),
br(),
h2('Factors'), #header 1
br(), #break
sliderInput("factor_input", "values", min = 0, max = 10,value = 1),
radioButtons("typeInput", "type of category",
choices = c("cat_1", "cat_2", "cat_3"),
selected = "cat_3"),
selectInput("countryInput", "traits",
choices = c("trait_1", "trait_2", "trait_3")),
numericInput("obs","Observations of traits",value=0,min=1,max=1000),
mainPanel(plotOutput('histoplot'),br(),tableOutput("table"))
)
shinyApp(ui = ui2, server = server)
library(tidytext)
library(topicmodels)
if(!require(pdftools))install.packages('pdftools')
if(!require(tm))install.packages('tm')
txt_file_path<-"C:/Data/References/Large banchiopods references/Clam shrimps/Roessler 1995 (Cyclestheria).pdf"
text_data2<-pdf_text(txt_file_path)
corpus_text<-SimpleCorpus(VectorSource(text_data2))%>%
tm_map(.,removePunctuation)%>%
tm_map(.,stripWhitespace)%>%
tm_map(.,removeWords,stopwords('en'))%>%
tm::removeNumbers()
tokens_n2<-corpus_text%>%
DocumentTermMatrix(.)
ap_lda <- LDA(tokens_n2, k = 2, method = "Gibbs",control = list(seed = 1234))
tokens_n2<-corpus_text%>%
DocumentTermMatrix(.)
corpus_text<-SimpleCorpus(VectorSource(text_data2))%>%
tm_map(.,removePunctuation)%>%
tm_map(.,stripWhitespace)%>%
tm_map(.,removeWords,stopwords('en'))%>%
tm::removeNumbers()
corpus_text<-SimpleCorpus(VectorSource(text_data2))%>%
tm_map(.,removePunctuation)%>%
tm_map(.,stripWhitespace)%>%
tm_map(.,removeWords,stopwords('en'))
tokens_n2<-corpus_text%>%
DocumentTermMatrix(.)
library(topicmodels)
ap_lda <- LDA(tokens_n2, k = 2, method = "Gibbs",control = list(seed = 1234))
ap_lda
ap_lda <- LDA(tokens_n2, k = 4, method = "Gibbs",control = list(seed = 1234))
ap_lda
library(tidytext)
topics_data<-tidy(ap_lda,matrix='beta')
topic_top_terms <- topics_data %>%
group_by(topic) %>%
top_n(20, beta) %>%
ungroup() %>%
arrange(topic, -beta)
topic_top_terms %>%
mutate(term = reorder(term, beta)) %>%
ggplot(aes(term, beta, fill = factor(topic))) +
geom_col(show.legend = FALSE) +
facet_wrap(~ topic, scales = "free") +
coord_flip()
topics_data2<-tidy(ap_lda,matrix='gamma')
topics_data2
View(topics_data2)
tokens_n2<-corpus_text%>%
anti_join(stop_words)%>%
DocumentTermMatrix(.)
corpus_text %>%
anti_join(stop_words) %>%
count(document, word, sort = TRUE) %>%
ungroup()
corpus_text %>%
unnest_tokens(word, text)%>%
anti_join(stop_words) %>%
count(document, word, sort = TRUE) %>%
ungroup()
corpus_text%>%
tm::removeNumbers(.)
topics_data<-tidy(ap_lda,matrix='beta')%>%
tm::removeNumbers(.)
library(vegan)
library(tidyverse)
library(readxl)
library(magrittr)
data_path<-"C:/Users/samee/Desktop/R data/sample_datasets/pashan_data.xlsx"
pashan_pre_2016<-read_excel(data_path,
sheet=1)
pashan_2016<-read_excel(data_path,
sheet=2)
pashan_full_data<-pashan_pre_2016%>%
left_join(pashan_2016%>%
dplyr::select(-Family),
by='Species')%>%
replace(., is.na(.), 0)
View(pashan_full_data)
pashan_long<-pashan_full_data%>%
dplyr::select('Species':'2010_10',
'2016_2_1':'2016_12_1')%>%
gather(Years,
values,
'2008_11':'2016_12_1')
names(pashan_full_data)
pashan_pre_2016_final<-pashan_pre_2016%>%
dplyr::select('Species':'2010_10')
pashan_full_data<-pashan_pre_2016_final%>%
left_join(pashan_2016%>%
dplyr::select(-Family),
by='Species')%>%
replace(., is.na(.), 0)
names(pashan_full_data)
pashan_long<-pashan_full_data%>%
dplyr::select('Species':'2010_10',
'2016_2_1':'2016_12_1')%>%
gather(Years,
values,
'2008_11':'2016_12_1')
index_2016<-str_detect(pashan_long$Years,'2016')
post_no<-nrow(pashan_long[index_2016,])
pre_no=nrow(pashan_long)-post_no
pashan_long<-pashan_full_data%>%
dplyr::select('Species':'2010_10','2016_2_1':'2016_12_1')%>%
gather(Years,values,'2008_11':'2016_12_1')%>%
dplyr::mutate(collection_grp=rep(c("pre","post"),
times=c(pre_no,
post_no)))
View(pashan_long)
pashan_long$collection_grp<-fct_relevel(pashan_long$collection_grp,"pre")
pashan_sp_data<-pashan_long%>%
group_by(Family,
Species,
collection_grp)%>%
summarise(species_tot=sum(values))%>%
mutate(sp_pre_abs=ifelse(species_tot>0,1,0))
pashan_sp_data%>%
group_by(collection_grp)%>%
summarise(sp_tot=sum(sp_pre_abs))%>%
ggplot(aes(x=collection_grp,
y=sp_tot))+
geom_col(fill='steelblue')+
theme_bw(base_size = 15)+
theme(axis.text.x = element_text(angle = 90,
hjust = 1))+
labs(x="Collection period",
y="Total species",
title = "Total species observed during two periods of collection")
pashan_sp_data%>%
group_by(collection_grp)%>%
summarise(sp_tot=sum(sp_pre_abs))%>%
ggplot(aes(x=collection_grp,
y=sp_tot))+
geom_col(fill='steelblue')+
theme_bw(base_size = 15)+
theme(axis.text.x = element_text(angle = 90,
hjust = 1))+
labs(x="Collection period",
y="Total species",
title = "Total species observed during two periods of collection")
pashan_sp_data%>%
ggplot(aes(x=Family,
y=sp_pre_abs))+
geom_col(fill='orange')+
facet_wrap(~collection_grp)+
theme_bw(base_size = 15)+
labs(x="Familes",
y="Total species",
title = "Total species observed in Pashan")+
coord_flip()
pashan_species<-pashan_long%>%
mutate_if(is.character,
as.factor)%>%
group_by(Family,
Species,
collection_grp)%>%
summarize(total_occ=sum(values))%>%
arrange(desc(total_occ))
pashan_species$Species<-fct_reorder(pashan_species$Species,
pashan_species$total_occ)
pashan_species%>%
ggplot(aes(x=Species,
y=total_occ))+
geom_col(fill='orange')+
facet_wrap(~collection_grp)+
theme_bw(base_size = 15)+
labs(x="Familes",
y="Occurrences",
title = "Species observed in Pashan")+
coord_flip()
names(pashan_pre_2016_final)
pashan_pre_2016t<-pashan_pre_2016_final %>%
select_if(is.numeric)%>%
t(.)%>%
data.frame(.)
sp_number_pre<-vegan::specnumber(pashan_pre_2016t)%>%
data.frame(.)%>%
rownames_to_column()%>%
dplyr::rename('sp_no'='.',
'collection_years'='rowname')
sp_number_pre%>%
ggplot(aes(x=collection_years,
y=sp_no))+
geom_point(col='forestgreen',
size=4)+
theme_bw(base_size = 15)+
theme(axis.text.x = element_text(angle = 90,
hjust = 1))+
labs(x="Collection period",
y="Total species",
title = "Total species observed during two periods of collection")
species_acc_pre<-specaccum(pashan_pre_2016t,
method = "random",
permutations = 999,
conditioned = TRUE,
gamma = "chao2")
plot (species_acc_pre,
col = 'blue',
ci=2,
main="Species accumulation of sample pre beautification",
xlab='Sites',
ylab='Species')
species_acc_pre
sp_rich_all_pre<-poolaccum(pashan_pre_2016t,
permutations = 999)
sp_rich_all_pre
species_rich_all_pre
sp_rich_all_pre
plot(sp_rich_all_pre)
names(pashan_2016)
pashan_2016t<-pashan_2016 %>%
select_if(is.numeric)%>%
t(.)%>%
data.frame(.)
sp_number_post<-vegan::specnumber(pashan_2016t)%>%
data.frame(.)%>%
rownames_to_column()%>%
dplyr::rename('sp_no'='.',
'collection_years'='rowname')
sp_number_pre%>%
ggplot(aes(x=collection_years,
y=sp_no))+
geom_point(col='forestgreen',
size=4)+
theme_bw(base_size = 15)+
theme(axis.text.x = element_text(angle = 90,
hjust = 1))+
labs(x="Collection period",
y="Total species",
title = "Total species observed during two periods of collection")
sp_number_pre%>%
ggplot(aes(x=collection_years,
y=sp_no))+
geom_point(col='forestgreen',
size=4)+
theme_bw(base_size = 15)+
theme(axis.text.x = element_text(angle = 90,
hjust = 1))+
labs(x="Collection period",
y="Total species",
title = "Total species observed in pre beautification period")
sp_number_post%>%
ggplot(aes(x=collection_years,
y=sp_no))+
geom_point(col='forestgreen',
size=4)+
theme_bw(base_size = 15)+
theme(axis.text.x = element_text(angle = 90,
hjust = 1))+
labs(x="Collection period",
y="Total species",
title = "Total species observed in post beautification period")
sp_rich_all_post<-poolaccum(pashan_2016t,
permutations = 999)
sp_rich_all_post
plot(sp_rich_all_pre)
plot(sp_rich_all_post)
class(sp_rich_all_post)
total_sp_pre<-data.frame(sp_richness_pre=sp_rich_all_post$S)
total_sp_pre<-data.frame(sp_richness_pre=sp_rich_all_post$S)%>%
dplyr::mutate(sp_richness_post=sp_rich_all_post$S)
names(pashan_pre_2016_final)
colnames(pashan_pre_2016_final[,-c("Species","Family")])
colnames(pashan_pre_2016_final%>%dplyr::select(-c("Species","Family"))
colnames(pashan_pre_2016_final%>%dplyr::select(-c("Species","Family")))
names(pashan_pre_2016_final%>%dplyr::select(-c("Species","Family")))
total_sp_pre<-data.frame(sp_richness_pre=sp_rich_all_post$S)%>%
dplyr::mutate(sampling_dates=names(pashan_pre_2016_final%>%dplyr::select(-c("Species","Family"))))
sp_richness_pre=sp_rich_all_post$S
sp_rich_all_post$S
sp_rich_all_post$means
length(sp_rich_all_post$S)
total_sp_pre<-data.frame(sp_richness_pre=sp_rich_all_post$S)
View(total_sp_pre)
View(total_sp_pre)
sp_rich_all_post
summary(sp_rich_all_post)
summary(sp_rich_all_post,display = "chao")
length(summary(sp_rich_all_post,display = "chao"))
nrow(summary(sp_rich_all_post,display = "chao"))
class(summary(sp_rich_all_post,display = "chao"))
summ_chao<-summary(sp_rich_all_post,display = "chao")
class(summ_chao)
sp_number_pre
sp_numb_dist<-sp_number_pre%>%
bind_rows(sp_number_post)
sp_numb_dist
nrow(sp_number_pre)
sp_numb_dist<-sp_number_pre%>%
dplyr::bind_rows(sp_number_post)%>%
dplyr::mutate(collection_grp=rep(c("pre","post"),
times=c(nrow(sp_number_pre),
nrow(sp_number_post))))
View(sp_numb_dist)
View(sp_numb_dist)
names(sp_numb_dist)
sp_numb_dist%>%
ggplot(aes(x=collection_grp,
y=sp_no))+
geom_boxplot(col='forestgreen',
size=4)+
theme_bw(base_size = 15)+
theme(axis.text.x = element_text(angle = 90,
hjust = 1))+
labs(x="Collection period",
y="Total species",
title = "Total species observed in post beautification period")
sp_numb_dist%>%
ggplot(aes(x=collection_grp,
y=sp_no))+
geom_boxplot(col='forestgreen')+
theme_bw(base_size = 15)+
theme(axis.text.x = element_text(angle = 90,
hjust = 1))+
labs(x="Collection period",
y="Total species",
title = "Total species observed in post beautification period")
names(sp_numb_dist)
sp_numb_dist$collection_grp<-fct_relevel(sp_numb_dist$collection_grp,"pre")
View(sp_numb_dist)
sp_numb_dist%>%
ggplot(aes(x=collection_grp,
y=sp_no))+
geom_boxplot(col='forestgreen')+
theme_bw(base_size = 15)+
theme(axis.text.x = element_text(angle = 90,
hjust = 1))+
labs(x="Collection period",
y="Total species",
title = "Total species observed in post beautification period")
sp_numb_dist%>%
ggplot(aes(x=collection_grp,
y=sp_no))+
geom_boxplot(col='forestgreen')+
theme_bw(base_size = 15)+
theme(axis.text.x = element_text(angle = 90,
hjust = 1))+
labs(x="Collection period",
y="Total species",
title = "Species number distribution for two collection periods")
sp_numb_dist%>%
ggplot(aes(x=collection_grp,
y=sp_no))+
geom_boxplot(col='black',
fill='forestgreen')+
theme_bw(base_size = 15)+
labs(x="Collection period",
y="Total species",
title = "Species number distribution for two collection periods")
pashan_sp_data<-pashan_long%>%
group_by(Family,
Species,
collection_grp)%>%
summarise(species_tot=sum(values))%>%
mutate(sp_pre_abs=ifelse(species_tot>0,1,0))
pashan_sp_data%>%
group_by(collection_grp)%>%
summarise(sp_tot=sum(sp_pre_abs))%>%
ggplot(aes(x=collection_grp,
y=sp_tot))+
geom_col(fill='steelblue')+
theme_bw(base_size = 15)+
theme(axis.text.x = element_text(angle = 90,
hjust = 1))+
labs(x="Collection period",
y="Total species",
title = "Total species observed during two periods of collection")
sp_numb_dist%>%
ggplot(aes(x=collection_grp,
y=sp_no))+
geom_boxplot(col='black',
fill='forestgreen')+
theme_bw(base_size = 15)+
labs(x="Collection period",
y="Total species",
title = "Species number distribution for two collection periods")
View(sp_numb_dist)
